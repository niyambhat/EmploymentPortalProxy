{"ast":null,"code":"var _jsxFileName = \"/Users/niyambhat/employmentcore/src/Context.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport { initialValues } from './initialValues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isText = RegExp(/^[A-Z ]+$/i);\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/); // us\nconst isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/); // us\nconst isNumber = RegExp(/^\\d+$/);\n\n// Applied to all fields\nconst variant = 'standard';\nconst margin = 'normal';\nexport const AppContext = /*#__PURE__*/createContext({\n  activeStep: 0,\n  formValues: initialValues,\n  handleChange() {},\n  handleNext() {},\n  handleBack() {},\n  handleRadio() {},\n  thresHoldChecker() {},\n  variant,\n  margin\n});\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increase':\n      return {\n        ...state,\n        activeStep: state.activeStep + 1\n      };\n    case 'decrease':\n      return {\n        ...state,\n        activeStep: state.activeStep - 1\n      };\n    case 'form-value':\n      return {\n        ...state,\n        formValues: {\n          ...state.formValues,\n          [action.name]: {\n            ...state.formValues[action.name],\n            value: action.fieldValue\n          }\n        }\n      };\n    case 'form-error':\n      return {\n        ...state,\n        formValues: {\n          ...state.formValues,\n          [action.name]: {\n            ...state.formValues[action.name],\n            error: action.error\n          }\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport function StepsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [{\n    activeStep,\n    formValues\n  }, dispatch] = useReducer(reducer, {\n    activeStep: 0,\n    formValues: initialValues\n  });\n\n  // Proceed to next step\n  const handleNext = () => dispatch({\n    type: 'increase'\n  });\n  // Go back to prev step\n  const handleBack = () => dispatch({\n    type: 'decrease'\n  });\n  //handle radioChange\n  const handleRadio = event => {\n    const {\n      type,\n      name,\n      value\n    } = event.target;\n    const fieldValue = value;\n    dispatch({\n      type: 'form-value',\n      name,\n      fieldValue\n    });\n    const fieldName = initialValues[name];\n  };\n  // Handle form change\n\n  function thresHoldChecker(salary) {\n    const name = \"taxIncomeBracket\";\n    if (salary > 0 && salary < 18201) {\n      const fieldValue = \"0-$18,200\";\n      dispatch({\n        type: 'form-value',\n        name,\n        fieldValue\n      });\n      setTax(salary);\n    } else if (salary > 18200 && salary < 37001) {\n      const fieldValue = \"$18,201-$37,000\";\n      dispatch({\n        type: 'form-value',\n        name,\n        fieldValue\n      });\n    } else if (salary > 37000 && salary < 90001) {\n      const fieldValue = \"$37,001-$90,000\";\n      dispatch({\n        type: 'form-value',\n        name,\n        fieldValue\n      });\n    } else if (salary > 90000 && salary < 180001) {\n      const fieldValue = \"$90,001-$180,200\";\n      dispatch({\n        type: 'form-value',\n        name,\n        fieldValue\n      });\n    } else if (salary > 180000) {\n      const fieldValue = \"$180,001-over\";\n      dispatch({\n        type: 'form-value',\n        name,\n        fieldValue\n      });\n    }\n  }\n  function setTax(salary) {\n    const name = \"taxableIncome\";\n    const fieldValue = 99;\n    dispatch({\n      type: 'form-value',\n      name,\n      fieldValue\n    });\n  }\n  const handleChange = (event, checked) => {\n    const {\n      type,\n      name,\n      value\n    } = event.target;\n    const fieldValue = type === 'checkbox' ? checked : value;\n    dispatch({\n      type: 'form-value',\n      name,\n      fieldValue\n    });\n    const fieldName = initialValues[name];\n    if (!fieldName) return;\n    const {\n      required,\n      validate,\n      minLength,\n      maxLength,\n      helperText\n    } = fieldName;\n    let error = '';\n    if (required && !fieldValue) error = 'This field is required';\n    if (minLength && value && value.length < minLength) error = `Minimum ${minLength} characters is required.`;\n    if (maxLength && value && value.length > maxLength) error = 'Maximum length exceeded!';\n    if (validate) {\n      switch (validate) {\n        case 'text':\n          if (value && !isText.test(value)) error = helperText || 'This field accepts text only.';\n          break;\n        case 'number':\n          if (value && !isNumber.test(value)) error = helperText || 'This field accepts numbers only.';\n          break;\n        case 'email':\n          if (value && !isEmail.test(value)) error = helperText || 'Please enter a valid email address.';\n          break;\n        case 'phone':\n          if (value && !isPhone.test(value)) error = helperText || 'Please enter a valid phone number. i.e: xxx-xxx-xxxx';\n          break;\n        case 'zip':\n          if (value && !isZip.test(value)) error = helperText || 'Please enter a valid zip code.';\n          break;\n        case 'checkbox':\n          if (!checked) error = helperText || 'Please provide a valid value.';\n          break;\n        case 'select':\n          if (!value) error = helperText || 'Please select a value.';\n          break;\n        default:\n          break;\n      }\n    }\n    dispatch({\n      type: 'form-error',\n      name,\n      error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      activeStep,\n      formValues,\n      handleChange,\n      handleNext,\n      handleBack,\n      handleRadio,\n      thresHoldChecker,\n      variant,\n      margin\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mui-step-form\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(StepsProvider, \"TbLvEXkdZpU7VFdiRJK6vf1yRpQ=\");\n_c = StepsProvider;\nvar _c;\n$RefreshReg$(_c, \"StepsProvider\");","map":{"version":3,"names":["React","createContext","useReducer","initialValues","isText","RegExp","isEmail","isPhone","isZip","isNumber","variant","margin","AppContext","activeStep","formValues","handleChange","handleNext","handleBack","handleRadio","thresHoldChecker","reducer","state","action","type","name","value","fieldValue","error","StepsProvider","children","dispatch","event","target","fieldName","salary","setTax","checked","required","validate","minLength","maxLength","helperText","length","test"],"sources":["/Users/niyambhat/employmentcore/src/Context.tsx"],"sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport { initialValues } from './initialValues'\n\nconst isText = RegExp(/^[A-Z ]+$/i)\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/) // us\nconst isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/) // us\nconst isNumber = RegExp(/^\\d+$/)\n\n// Applied to all fields\nconst variant = 'standard'\nconst margin = 'normal'\n\nexport declare type ValidationSchema = Record<\n  string,\n  {\n    value?: any\n    error?: string\n    required?: boolean\n    validate?:\n      | 'text'\n      | 'number'\n      | 'email'\n      | 'phone'\n      | 'zip'\n      | 'checkbox'\n      | 'select'\n    minLength?: number\n    maxLength?: number\n    helperText?: string\n  }\n>\n\ntype ContextProps = {\n  activeStep: number\n  formValues: ValidationSchema\n  handleChange: (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    checked?: boolean\n  ) => void\n  handleRadio: any\n  handleNext: () => void\n  handleBack: () => void\n  thresHoldChecker: (salary:number)=> void\n  variant: 'outlined' | 'standard' | 'filled'\n  margin: 'dense' | 'normal' | 'none'\n}\n\nexport const AppContext = createContext<ContextProps>({\n  activeStep: 0,\n  formValues: initialValues,\n  handleChange() {},\n  handleNext() {},\n  handleBack() {},\n  handleRadio() {},\n  thresHoldChecker() {},\n  variant,\n  margin\n})\n\ninterface ProviderProps {\n  children: React.ReactNode\n}\n\ntype State = {\n  activeStep: number\n  formValues: ValidationSchema\n}\n\ntype Action =\n  | { type: 'increase' }\n  | { type: 'decrease' }\n  | { type: 'form-value'; name: string; fieldValue: any }\n  | { type: 'form-error'; name: string; error: string }\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'increase':\n      return {\n        ...state,\n        activeStep: state.activeStep + 1\n      }\n    case 'decrease':\n      return {\n        ...state,\n        activeStep: state.activeStep - 1\n      }\n    case 'form-value':\n      return {\n        ...state,\n        formValues: {\n          ...state.formValues,\n          [action.name]: {\n            ...state.formValues[action.name],\n            value: action.fieldValue\n          }\n        }\n      }\n    case 'form-error':\n      return {\n        ...state,\n        formValues: {\n          ...state.formValues,\n          [action.name]: {\n            ...state.formValues[action.name],\n            error: action.error\n          }\n        }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport function StepsProvider({ children }: ProviderProps) {\n  const [{ activeStep, formValues }, dispatch] = useReducer(reducer, {\n    activeStep: 0,\n    formValues: initialValues\n  })\n\n  // Proceed to next step\n  const handleNext = () => dispatch({ type: 'increase' })\n  // Go back to prev step\n  const handleBack = () => dispatch({ type: 'decrease' })\n  //handle radioChange\n  const handleRadio =(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{ \n    const { type, name, value } = event.target\n    const fieldValue =  value;\n    dispatch({ type: 'form-value', name, fieldValue });\n    const fieldName = initialValues[name]\n  }\n  // Handle form change\n\n  function thresHoldChecker(salary:number){\n    const name = \"taxIncomeBracket\";\n    if(salary > 0 && salary< 18201){\n      const fieldValue = \"0-$18,200\"\n      dispatch({ type: 'form-value', name, fieldValue });\n      setTax(salary)\n   }\n     else if (salary > 18200 && salary< 37001){\n      const fieldValue = \"$18,201-$37,000\";\n      dispatch({ type: 'form-value', name, fieldValue }); \n  } else if (salary > 37000 && salary< 90001){\n      const fieldValue = \"$37,001-$90,000\";\n      dispatch({ type: 'form-value', name, fieldValue });\n  } else if (salary > 90000 && salary< 180001){\n    const fieldValue = \"$90,001-$180,200\";\n    dispatch({ type: 'form-value', name, fieldValue });\n  }  else if (salary > 180000){\n    const fieldValue = \"$180,001-over\";\n    dispatch({ type: 'form-value', name, fieldValue });\n  }\n  }\n\n  function setTax(salary:number){\n    const  name= \"taxableIncome\";\n    const fieldValue = 99;\n    dispatch({ type: 'form-value', name, fieldValue });\n\n  }\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    checked?: boolean\n  ) => {\n    \n    const { type, name, value } = event.target\n    const fieldValue = type === 'checkbox' ? checked : value\n    dispatch({ type: 'form-value', name, fieldValue })\n\n    const fieldName = initialValues[name]\n    if (!fieldName) return\n\n    const { required, validate, minLength, maxLength, helperText } = fieldName\n\n    let error = ''\n\n    if (required && !fieldValue) error = 'This field is required'\n    if (minLength && value && value.length < minLength)\n      error = `Minimum ${minLength} characters is required.`\n    if (maxLength && value && value.length > maxLength)\n      error = 'Maximum length exceeded!'\n    if (validate) {\n      switch (validate) {\n        case 'text':\n          if (value && !isText.test(value))\n            error = helperText || 'This field accepts text only.'\n          break\n\n        case 'number':\n          if (value && !isNumber.test(value))\n            error = helperText || 'This field accepts numbers only.'\n          break\n\n        case 'email':\n          if (value && !isEmail.test(value))\n            error = helperText || 'Please enter a valid email address.'\n          break\n\n        case 'phone':\n          if (value && !isPhone.test(value))\n            error =\n              helperText ||\n              'Please enter a valid phone number. i.e: xxx-xxx-xxxx'\n          break\n\n        case 'zip':\n          if (value && !isZip.test(value))\n            error = helperText || 'Please enter a valid zip code.'\n          break\n\n        case 'checkbox':\n          if (!checked) error = helperText || 'Please provide a valid value.'\n          break\n\n        case 'select':\n          if (!value) error = helperText || 'Please select a value.'\n          break\n\n        default:\n          break\n      }\n    }\n\n    dispatch({ type: 'form-error', name, error })\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        activeStep,\n        formValues,\n        handleChange,\n        handleNext,\n        handleBack,\n        handleRadio,\n        thresHoldChecker,\n        variant,\n        margin\n      }}\n    >\n      <div className=\"mui-step-form\">{children}</div>\n    </AppContext.Provider>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,aAAa,QAAQ,iBAAiB;AAAA;AAE/C,MAAMC,MAAM,GAAGC,MAAM,CAAC,YAAY,CAAC;AACnC,MAAMC,OAAO,GAAGD,MAAM,CAAC,0CAA0C,CAAC;AAClE,MAAME,OAAO,GAAGF,MAAM,CAAC,uCAAuC,CAAC,EAAC;AAChE,MAAMG,KAAK,GAAGH,MAAM,CAAC,6BAA6B,CAAC,EAAC;AACpD,MAAMI,QAAQ,GAAGJ,MAAM,CAAC,OAAO,CAAC;;AAEhC;AACA,MAAMK,OAAO,GAAG,UAAU;AAC1B,MAAMC,MAAM,GAAG,QAAQ;AAqCvB,OAAO,MAAMC,UAAU,gBAAGX,aAAa,CAAe;EACpDY,UAAU,EAAE,CAAC;EACbC,UAAU,EAAEX,aAAa;EACzBY,YAAY,GAAG,CAAC,CAAC;EACjBC,UAAU,GAAG,CAAC,CAAC;EACfC,UAAU,GAAG,CAAC,CAAC;EACfC,WAAW,GAAG,CAAC,CAAC;EAChBC,gBAAgB,GAAG,CAAC,CAAC;EACrBT,OAAO;EACPC;AACF,CAAC,CAAC;AAiBF,SAASS,OAAO,CAACC,KAAY,EAAEC,MAAc,EAAS;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRR,UAAU,EAAEQ,KAAK,CAACR,UAAU,GAAG;MACjC,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGQ,KAAK;QACRR,UAAU,EAAEQ,KAAK,CAACR,UAAU,GAAG;MACjC,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRP,UAAU,EAAE;UACV,GAAGO,KAAK,CAACP,UAAU;UACnB,CAACQ,MAAM,CAACE,IAAI,GAAG;YACb,GAAGH,KAAK,CAACP,UAAU,CAACQ,MAAM,CAACE,IAAI,CAAC;YAChCC,KAAK,EAAEH,MAAM,CAACI;UAChB;QACF;MACF,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGL,KAAK;QACRP,UAAU,EAAE;UACV,GAAGO,KAAK,CAACP,UAAU;UACnB,CAACQ,MAAM,CAACE,IAAI,GAAG;YACb,GAAGH,KAAK,CAACP,UAAU,CAACQ,MAAM,CAACE,IAAI,CAAC;YAChCG,KAAK,EAAEL,MAAM,CAACK;UAChB;QACF;MACF,CAAC;IAEH;MACE,OAAON,KAAK;EAAA;AAElB;AAEA,OAAO,SAASO,aAAa,OAA8B;EAAA;EAAA,IAA7B;IAAEC;EAAwB,CAAC;EACvD,MAAM,CAAC;IAAEhB,UAAU;IAAEC;EAAW,CAAC,EAAEgB,QAAQ,CAAC,GAAG5B,UAAU,CAACkB,OAAO,EAAE;IACjEP,UAAU,EAAE,CAAC;IACbC,UAAU,EAAEX;EACd,CAAC,CAAC;;EAEF;EACA,MAAMa,UAAU,GAAG,MAAMc,QAAQ,CAAC;IAAEP,IAAI,EAAE;EAAW,CAAC,CAAC;EACvD;EACA,MAAMN,UAAU,GAAG,MAAMa,QAAQ,CAAC;IAAEP,IAAI,EAAE;EAAW,CAAC,CAAC;EACvD;EACA,MAAML,WAAW,GAAGa,KAAgE,IAAG;IACrF,MAAM;MAAER,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGM,KAAK,CAACC,MAAM;IAC1C,MAAMN,UAAU,GAAID,KAAK;IACzBK,QAAQ,CAAC;MAAEP,IAAI,EAAE,YAAY;MAAEC,IAAI;MAAEE;IAAW,CAAC,CAAC;IAClD,MAAMO,SAAS,GAAG9B,aAAa,CAACqB,IAAI,CAAC;EACvC,CAAC;EACD;;EAEA,SAASL,gBAAgB,CAACe,MAAa,EAAC;IACtC,MAAMV,IAAI,GAAG,kBAAkB;IAC/B,IAAGU,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAE,KAAK,EAAC;MAC7B,MAAMR,UAAU,GAAG,WAAW;MAC9BI,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,IAAI;QAAEE;MAAW,CAAC,CAAC;MAClDS,MAAM,CAACD,MAAM,CAAC;IACjB,CAAC,MACM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAE,KAAK,EAAC;MACxC,MAAMR,UAAU,GAAG,iBAAiB;MACpCI,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,IAAI;QAAEE;MAAW,CAAC,CAAC;IACtD,CAAC,MAAM,IAAIQ,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAE,KAAK,EAAC;MACvC,MAAMR,UAAU,GAAG,iBAAiB;MACpCI,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,IAAI;QAAEE;MAAW,CAAC,CAAC;IACtD,CAAC,MAAM,IAAIQ,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAE,MAAM,EAAC;MAC1C,MAAMR,UAAU,GAAG,kBAAkB;MACrCI,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,IAAI;QAAEE;MAAW,CAAC,CAAC;IACpD,CAAC,MAAO,IAAIQ,MAAM,GAAG,MAAM,EAAC;MAC1B,MAAMR,UAAU,GAAG,eAAe;MAClCI,QAAQ,CAAC;QAAEP,IAAI,EAAE,YAAY;QAAEC,IAAI;QAAEE;MAAW,CAAC,CAAC;IACpD;EACA;EAEA,SAASS,MAAM,CAACD,MAAa,EAAC;IAC5B,MAAOV,IAAI,GAAE,eAAe;IAC5B,MAAME,UAAU,GAAG,EAAE;IACrBI,QAAQ,CAAC;MAAEP,IAAI,EAAE,YAAY;MAAEC,IAAI;MAAEE;IAAW,CAAC,CAAC;EAEpD;EAEA,MAAMX,YAAY,GAAG,CACnBgB,KAAgE,EAChEK,OAAiB,KACd;IAEH,MAAM;MAAEb,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGM,KAAK,CAACC,MAAM;IAC1C,MAAMN,UAAU,GAAGH,IAAI,KAAK,UAAU,GAAGa,OAAO,GAAGX,KAAK;IACxDK,QAAQ,CAAC;MAAEP,IAAI,EAAE,YAAY;MAAEC,IAAI;MAAEE;IAAW,CAAC,CAAC;IAElD,MAAMO,SAAS,GAAG9B,aAAa,CAACqB,IAAI,CAAC;IACrC,IAAI,CAACS,SAAS,EAAE;IAEhB,MAAM;MAAEI,QAAQ;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,SAAS;MAAEC;IAAW,CAAC,GAAGR,SAAS;IAE1E,IAAIN,KAAK,GAAG,EAAE;IAEd,IAAIU,QAAQ,IAAI,CAACX,UAAU,EAAEC,KAAK,GAAG,wBAAwB;IAC7D,IAAIY,SAAS,IAAId,KAAK,IAAIA,KAAK,CAACiB,MAAM,GAAGH,SAAS,EAChDZ,KAAK,GAAI,WAAUY,SAAU,0BAAyB;IACxD,IAAIC,SAAS,IAAIf,KAAK,IAAIA,KAAK,CAACiB,MAAM,GAAGF,SAAS,EAChDb,KAAK,GAAG,0BAA0B;IACpC,IAAIW,QAAQ,EAAE;MACZ,QAAQA,QAAQ;QACd,KAAK,MAAM;UACT,IAAIb,KAAK,IAAI,CAACrB,MAAM,CAACuC,IAAI,CAAClB,KAAK,CAAC,EAC9BE,KAAK,GAAGc,UAAU,IAAI,+BAA+B;UACvD;QAEF,KAAK,QAAQ;UACX,IAAIhB,KAAK,IAAI,CAAChB,QAAQ,CAACkC,IAAI,CAAClB,KAAK,CAAC,EAChCE,KAAK,GAAGc,UAAU,IAAI,kCAAkC;UAC1D;QAEF,KAAK,OAAO;UACV,IAAIhB,KAAK,IAAI,CAACnB,OAAO,CAACqC,IAAI,CAAClB,KAAK,CAAC,EAC/BE,KAAK,GAAGc,UAAU,IAAI,qCAAqC;UAC7D;QAEF,KAAK,OAAO;UACV,IAAIhB,KAAK,IAAI,CAAClB,OAAO,CAACoC,IAAI,CAAClB,KAAK,CAAC,EAC/BE,KAAK,GACHc,UAAU,IACV,sDAAsD;UAC1D;QAEF,KAAK,KAAK;UACR,IAAIhB,KAAK,IAAI,CAACjB,KAAK,CAACmC,IAAI,CAAClB,KAAK,CAAC,EAC7BE,KAAK,GAAGc,UAAU,IAAI,gCAAgC;UACxD;QAEF,KAAK,UAAU;UACb,IAAI,CAACL,OAAO,EAAET,KAAK,GAAGc,UAAU,IAAI,+BAA+B;UACnE;QAEF,KAAK,QAAQ;UACX,IAAI,CAAChB,KAAK,EAAEE,KAAK,GAAGc,UAAU,IAAI,wBAAwB;UAC1D;QAEF;UACE;MAAK;IAEX;IAEAX,QAAQ,CAAC;MAAEP,IAAI,EAAE,YAAY;MAAEC,IAAI;MAAEG;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MACLd,UAAU;MACVC,UAAU;MACVC,YAAY;MACZC,UAAU;MACVC,UAAU;MACVC,WAAW;MACXC,gBAAgB;MAChBT,OAAO;MACPC;IACF,CAAE;IAAA,uBAEF;MAAK,SAAS,EAAC,eAAe;MAAA,UAAEkB;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QAC3B;AAE1B;AAAC,GAnIeD,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}